{"version":3,"sources":["Output.js","userflow.png","wireframe.png","CodingEditor.js","DictionarySection.js","FunctionSection.js","CustomizedDialogs.js","App.js","index.js"],"names":["Output","x","y","setup","p5","canvasParentRef","createCanvas","parent","draw","clear","props","fs","length","eval","join","code","this","React","Component","module","exports","CodingEditor","myRef","createRef","state","demoMethod","bind","sendCode","prevProps","userID","setState","refs","Prism","highlightAll","className","map","f","highlight","languages","processing","value","padding","style","fontFamily","fontSize","maxHeight","ref","onValueChange","Fab","color","size","aria-label","onClick","meaningsList","meanings","DictionarySection","handleChange","event","word","target","val","sendData","FormControl","InputLabel","id","Select","labelId","onChange","MenuItem","disabled","FormHelperText","defObject","key","defid","toUpperCase","definition","split","Button","disableElevation","variant","functions","float","margin","FunctionSection","sendFunc","textAlign","DialogTitle","withStyles","theme","root","spacing","closeButton","position","right","top","palette","grey","children","classes","onClose","other","disableTypography","Typography","IconButton","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","useState","open","setOpen","handleClose","left","Dialog","fullScreen","aria-labelledby","dividers","paddingTop","width","height","alt","src","require","href","title","frameborder","allow","allowfullscreen","bottom","autoFocus","App","outputCode","getData","getOutputCode","getFunc","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"osIAGMA,O,8xBAIJC,EAAI,G,MACJC,EAAI,G,MAEJC,MAAQ,SAACC,EAAIC,GACXD,EAAGE,aAAa,IAAK,KAAKC,OAAOF,I,MAEnCG,KAAO,SAAAJ,IACLA,GAAGK,QACC,MAAKC,MAAMC,GAAGC,QAAU,GAC1BC,KAAK,MAAKH,MAAMC,GAAGG,KAAK,OAE1BD,KAAK,MAAKH,MAAMK,O,iOAIhB,OAAO,2DAAC,gDAAD,CAAQZ,MAAOa,KAAKb,MAAOK,KAAMQ,KAAKR,W,QAnB5BS,6CAAMC,WAsBZlB,8B,gKCzBfmB,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mOC2G5BC,G,wDA/Fb,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQL,IAAMM,YACnB,EAAKC,MAAQ,CAAET,KAAM,EAAKL,MAAMK,MAChC,EAAKU,WAAa,EAAKA,WAAWC,KAAhB,gBAJD,E,yDAOjBV,KAAKN,MAAMiB,SAASX,KAAKQ,MAAMT,Q,yCAEda,GAAY,IAAD,OACxBZ,KAAKN,MAAMmB,SAAWD,EAAUC,QAClCb,KAAKc,UACH,SAAApB,GAAK,MAAK,CAAEK,KAAML,EAAMK,SACxB,kBAAO,EAAKgB,KAAKT,MAAQ,EAAKE,MAAMT,U,0CAKxCiB,IAAMC,iB,+BASE,IAAD,OAWP,OACE,yBAAKC,UAAU,cAEZlB,KAAKN,MAAMC,GAAGC,QAAU,EACvB,6BACGI,KAAKN,MAAMC,GAAGwB,KAAI,SAAAC,GACjB,OACE,yBAAKC,UAAW,SAAAtB,GAAI,OAAIsB,oBAAUtB,EAAMuB,YAAUC,cAChD,kBAAC,IAAD,CACEL,UAAU,SACVM,MAAOJ,EACPC,UAAW,SAAAtB,GAAI,OAAIsB,oBAAUtB,EAAMuB,YAAUC,aAC7CE,QAAS,GACTC,MAAO,CACLC,WAAY,sCACZC,SAAU,GAGVC,UAAW,eAQvB,qCAEF,kBAAC,IAAD,CACEC,IAAK9B,KAAKM,MACVY,UAAU,SACVM,MAAOxB,KAAKQ,MAAMT,KAClBgC,cAAe,SAAAhC,GAAI,OAAI,EAAKe,SAAS,CAAEf,UACvCsB,UAAW,SAAAtB,GAAI,OAAIsB,oBAAUtB,EAAMuB,YAAUC,aAC7CE,QAAS,GACTC,MAAO,CACLC,WAAY,sCACZC,SAAU,GAGVC,UAAW,UAGf,yBAAKX,UAAU,cACb,kBAACc,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLC,aAAW,MACXC,QAASpC,KAAKS,YAEd,kBAAC,IAAD,a,GAzFeR,IAAMC,Y,sECD3BmC,EAAeC,EA+ENC,E,kDA5Eb,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IAMR8C,aAAe,SAAAC,GAEb,EAAK3B,SAAS,CAAE4B,KAAMD,EAAME,OAAOnB,SAPnC,EAAKhB,MAAQ,CAAEkC,KAAM,IAErB,EAAKjC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAK8B,aAAe,EAAKA,aAAa9B,KAAlB,gBALH,E,uDAWRkC,GACT5C,KAAKN,MAAMmD,SAASD,K,+BAEZ,IAAD,OACP,OACE,yBAAK1B,UAAU,qBACb,yBAAKA,UAAU,WACb,kBAAC4B,EAAA,EAAD,CAAa5B,UAAU,eACrB,kBAAC6B,EAAA,EAAD,CAAYC,GAAG,mCAAf,gBAGA,kBAACC,EAAA,EAAD,CACEC,QAAQ,kCACRF,GAAG,4BACHxB,MAAOxB,KAAKQ,MAAMkC,KAClBS,SAAUnD,KAAKwC,cAEf,kBAACY,EAAA,EAAD,CAAU5B,MAAM,IACd,qCAEF,kBAAC4B,EAAA,EAAD,CAAU5B,MAAO,SAAjB,SACA,kBAAC4B,EAAA,EAAD,CAAU5B,MAAO,OAAjB,OACA,kBAAC4B,EAAA,EAAD,CAAUC,UAAQ,EAAC7B,MAAO,IAA1B,mBAIF,kBAAC8B,EAAA,EAAD,gDAMJ,yBAAKpC,UAAU,mBACZmB,EAAalB,KAAI,SAAAoC,GAChB,OACE,yBAAKC,IAAKD,EAAUE,OACjBF,EAAUb,KAAKgB,gBAChB,EAAKlD,MAAMkC,KAAKgB,cACd,yBAAKxC,UAAU,eAAe8B,GAAIO,EAAUE,OACzCF,EAAUI,WACRC,MAAM,KACN9D,KAAK,KACL8D,MAAM,KACN9D,KAAK,KACR,kBAAC+D,EAAA,EAAD,CACEC,kBAAgB,EAChBC,QAAQ,YACR9B,MAAM,UACNG,QAAS,kBAAM,EAAK3B,WAAW8C,EAAUS,YACzCtC,MAAO,CAAEuC,MAAO,QAASC,OAAQ,SALnC,WAWF,+C,GAnEcjE,IAAMC,WCsCvBiE,G,wDA5Cb,WAAYzE,GAAQ,IAAD,8BACjB,cAAMA,IAEDe,WAAa,EAAKA,WAAWC,KAAhB,gBAHD,E,uDAKRkC,GACT5C,KAAKN,MAAM0E,SAASxB,K,+BAEZ,IAAD,OACP,OACE,yBAAK1B,UAAU,mBACb,kBAAC6B,EAAA,EAAD,CACErB,MAAO,CAAE2C,UAAW,SAAUH,OAAQ,QACtClB,GAAG,mCAFL,iBAOChD,KAAKN,MAAMsE,UAAUpE,QAAU,EAC9B,yBAAKsB,UAAU,mBACZlB,KAAKN,MAAMsE,UAAU7C,KAAI,SAAAC,GACxB,OACE,yBAAKF,UAAU,gBACZE,EAAEwC,MAAM,MAAM,GAAGF,cAClB,kBAACG,EAAA,EAAD,CACEC,kBAAgB,EAChBC,QAAQ,YACR9B,MAAM,UACNG,QAAS,kBAAM,EAAK3B,WAAWW,IAC/BM,MAAO,CAAEuC,MAAO,QAASC,OAAQ,SALnC,YAcR,0C,GAvCoBjE,IAAMC,Y,qGCmB9BoE,EAAcC,aAbL,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJP,OAAQ,EACRzC,QAAS+C,EAAME,QAAQ,IAEzBC,YAAa,CACXC,SAAU,WACVC,MAAOL,EAAME,QAAQ,GACrBI,IAAKN,EAAME,QAAQ,GACnBzC,MAAOuC,EAAMO,QAAQC,KAAK,SAIVT,EAAmB,SAAA7E,GAAU,IACvCuF,EAAyCvF,EAAzCuF,SAAUC,EAA+BxF,EAA/BwF,QAASC,EAAsBzF,EAAtByF,QAAYC,EADO,YACG1F,EADH,kCAE9C,OACE,kBAAC,IAAD,eAAgB2F,mBAAiB,EAACnE,UAAWgE,EAAQT,MAAUW,GAC7D,kBAACE,EAAA,EAAD,CAAYvB,QAAQ,MAAMkB,GACzBE,EACC,kBAACI,EAAA,EAAD,CACEpD,aAAW,QACXjB,UAAWgE,EAAQP,YACnBvC,QAAS+C,GAET,kBAAC,IAAD,OAEA,SAKJK,EAAgBjB,aAAW,SAAAC,GAAK,MAAK,CACzCC,KAAM,CACJhD,QAAS+C,EAAME,QAAQ,OAFLH,CAIlBkB,KAEEC,EAAgBnB,aAAW,SAAAC,GAAK,MAAK,CACzCC,KAAM,CACJP,OAAQ,EACRzC,QAAS+C,EAAME,QAAQ,OAHLH,CAKlBoB,KAEW,SAASC,IAAqB,IAAD,EAClB3F,IAAM4F,UAAS,GADG,mBACnCC,EADmC,KAC7BC,EAD6B,KAMpCC,EAAc,WAClBD,GAAQ,IAGV,OACE,6BACE,kBAAClC,EAAA,EAAD,CACEnC,MAAO,CAAEoD,IAAK,OAAQmB,KAAM,OAAQrB,SAAU,SAC9Cb,QAAQ,YACR9B,MAAM,UACNG,QAbkB,WACtB2D,GAAQ,KAQN,QAQA,kBAACG,EAAA,EAAD,CACEC,WAAW,OACXhB,QAASa,EACTI,kBAAgB,0BAChBN,KAAMA,GAEN,kBAAC,EAAD,CAAa9C,GAAG,0BAA0BmC,QAASa,GAAnD,kCAGA,kBAAC,EAAD,CAAetE,MAAO,CAAE2C,UAAW,UAAYgC,UAAQ,GACrD,wBAAI3E,MAAO,CAAE4E,WAAY,SAAzB,eACA,uBAAG5E,MAAO,CAAEwC,OAAQ,SAAUG,UAAW,SAAUkC,MAAO,UAA1D,0xBAcA,wBAAI7E,MAAO,CAAE4E,WAAY,UAAzB,aACA,yBACEE,OAAO,MACPC,IAAI,4BACJC,IAAKC,EAAQ,MAEf,wBAAIjF,MAAO,CAAE4E,WAAY,UAAzB,aACA,yBACEE,OAAO,MACPC,IAAI,4BACJC,IAAKC,EAAQ,MAEf,wBAAIjF,MAAO,CAAE4E,WAAY,UAAzB,eACA,uCACA,uBAAGM,KAAK,wCAAR,cACA,qCACA,4BACEC,MAAM,gBACNN,MAAM,MACNC,OAAO,MACPE,IAAI,4CACJI,YAAY,IACZC,MAAM,0EACNC,iBAAe,IAEjB,wBAAItF,MAAO,CAAE4E,WAAY,UAAzB,sBAzCF,4BA2CE,uBAAGM,KAAK,qDAAR,sDAIF,kBAAC,EAAD,CAAelF,MAAO,CAAEkD,SAAU,SAAUqC,OAAQ,SAClD,kBAACpD,EAAA,EAAD,CACEqD,WAAS,EACTnD,QAAQ,YACR3B,QAAS4D,EACT/D,MAAM,WAJR,2B,IC3DKkF,E,kDAjEb,WAAYzH,GAAQ,IAAD,8BACjB,cAAMA,IACDc,MAAQ,CAAET,KAAM,GAAIqH,WAAY,GAAIpD,UAAW,GAAIrE,GAAI,IAC5D,EAAK0H,QAAU,EAAKA,QAAQ3G,KAAb,gBACf,EAAK4G,cAAgB,EAAKA,cAAc5G,KAAnB,gBACrB,EAAK6G,QAAU,EAAKA,QAAQ7G,KAAb,gBALE,E,oDAOXkC,GAEN5C,KAAKc,SAAS,CAAEkD,UAAWpB,M,oCAGfA,GAEZ5C,KAAKc,SAAS,CAAEsG,WAAYxE,M,8BAEtBA,GAKN5C,KAAKc,UAAS,SAAA0G,GAAS,MAAK,CAAE7H,GAAG,GAAD,mBAAM6H,EAAU7H,IAAhB,CAAoBiD,U,+BAIpD,OACE,yBAAK1B,UAAU,OACb,4BAAQA,UAAU,cACf,IACD,kBAAC0E,EAAD,MAAsB,KAExB,yBAAK1E,UAAU,eACb,yBAAKA,UAAU,cACb,kBAAClC,EAAA,EAAD,CAAQe,KAAMC,KAAKQ,MAAM4G,WAAYzH,GAAIK,KAAKQ,MAAMb,MAEtD,yBAAKuB,UAAU,cACb,yBACEQ,MAAO,CAAEE,SAAU,OAAQK,MAAO,OAAQoC,UAAW,WADvD,6BAG4B,6BAH5B,kEAOA,kBAAC,EAAD,CACE1E,GAAIK,KAAKQ,MAAMb,GACfI,KAAMC,KAAKQ,MAAM4G,WACjBzG,SAAUX,KAAKsH,kBAIrB,yBAAKpG,UAAU,gBACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,CAAmB2B,SAAU7C,KAAKqH,WAEpC,yBAAKnG,UAAU,oBACb,kBAAC,EAAD,CACEkD,SAAUpE,KAAKuH,QACfvD,UAAWhE,KAAKQ,MAAMwD,mB,GA1DlB/D,IAAMC,WCFxBuH,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.51726d9a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\nclass Output extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n  x = 50;\r\n  y = 50;\r\n\r\n  setup = (p5, canvasParentRef) => {\r\n    p5.createCanvas(925, 350).parent(canvasParentRef); // use parent to render canvas in this ref (without that p5 render this canvas outside your component)\r\n  };\r\n  draw = p5 => {\r\n    p5.clear();\r\n    if (this.props.fs.length >= 1) {\r\n      eval(this.props.fs.join(\"\\n\"));\r\n    }\r\n    eval(this.props.code);\r\n  };\r\n\r\n  render() {\r\n    return <Sketch setup={this.setup} draw={this.draw} />;\r\n  }\r\n}\r\nexport default Output;\r\n","module.exports = __webpack_public_path__ + \"static/media/userflow.0da8d8ce.png\";","module.exports = __webpack_public_path__ + \"static/media/wireframe.2f8a4cff.png\";","import React from \"react\";\r\nimport Prism from \"prismjs\";\r\nimport Editor from \"react-simple-code-editor\";\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport \"prismjs/components/prism-clike\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"prismjs/components/prism-processing\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport \"./codeEditorStyles.css\";\r\n\r\nclass CodingEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = { code: this.props.code };\r\n    this.demoMethod = this.demoMethod.bind(this);\r\n  }\r\n  demoMethod() {\r\n    this.props.sendCode(this.state.code);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.userID !== prevProps.userID) {\r\n      this.setState(\r\n        props => ({ code: props.code }),\r\n        () => (this.refs.myRef = this.state.code)\r\n      );\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    Prism.highlightAll();\r\n  }\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   if (nextProps.code === this.state.code && nextProps.f === this.state.f) {\r\n  //     return false;\r\n  //   } else {\r\n  //     return true;\r\n  //   }\r\n  // }\r\n  render() {\r\n    // if (this.state.f !== \"\") {\r\n    //   alert(\"here\");\r\n    //   this.setState({\r\n    //     code: this.refs.myRef + \" \" + this.props.f,\r\n    //     f: \"\"\r\n    //   });\r\n    // } else {\r\n    //   // alert(\"updaaaated\", this.props.code, this.props.f);\r\n    // }\r\n\r\n    return (\r\n      <div className=\"codeEditor\">\r\n        {/* {alert(this.state.code + \"snap\")} */}\r\n        {this.props.fs.length >= 1 ? (\r\n          <div>\r\n            {this.props.fs.map(f => {\r\n              return (\r\n                <div highlight={code => highlight(code, languages.processing)}>\r\n                  <Editor\r\n                    className=\"editor\"\r\n                    value={f}\r\n                    highlight={code => highlight(code, languages.processing)}\r\n                    padding={10}\r\n                    style={{\r\n                      fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n                      fontSize: 12,\r\n                      //   height: \"100%\",\r\n                      //   minHeight: \"80%\",\r\n                      maxHeight: \"100%\"\r\n                    }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Editor\r\n          ref={this.myRef}\r\n          className=\"editor\"\r\n          value={this.state.code}\r\n          onValueChange={code => this.setState({ code })}\r\n          highlight={code => highlight(code, languages.processing)}\r\n          padding={10}\r\n          style={{\r\n            fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n            fontSize: 12,\r\n            //   height: \"100%\",\r\n            //   minHeight: \"80%\",\r\n            maxHeight: \"100%\"\r\n          }}\r\n        />\r\n        <div className=\"playButton\">\r\n          <Fab\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            aria-label=\"add\"\r\n            onClick={this.demoMethod}\r\n          >\r\n            <PlayArrowIcon />\r\n          </Fab>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CodingEditor;\r\n","import React from \"react\";\r\nimport meanings from \"./meanings\";\r\nimport \"./dictionarySection.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst meaningsList = meanings;\r\n\r\nclass DictionarySection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { word: \"\" };\r\n    // this.meaningSelected = \"yooo\";\r\n    this.demoMethod = this.demoMethod.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange = event => {\r\n    // setWord(event.target.value);\r\n    this.setState({ word: event.target.value });\r\n  };\r\n  demoMethod(val) {\r\n    this.props.sendData(val);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"dictionarySection\">\r\n        <div className=\"heading\">\r\n          <FormControl className=\"formControl\">\r\n            <InputLabel id=\"demo-simple-select-helper-label\">\r\n              Choose Slang\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-helper-label\"\r\n              id=\"demo-simple-select-helper\"\r\n              value={this.state.word}\r\n              onChange={this.handleChange}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value={\"Hella\"}>Hella</MenuItem>\r\n              <MenuItem value={\"Lit\"}>Lit</MenuItem>\r\n              <MenuItem disabled value={\"\"}>\r\n                More Coming up\r\n              </MenuItem>\r\n            </Select>\r\n            <FormHelperText>\r\n              All definitions from urban Dictionary\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div className=\"meaningsDisplay\">\r\n          {meaningsList.map(defObject => {\r\n            return (\r\n              <div key={defObject.defid}>\r\n                {defObject.word.toUpperCase() ===\r\n                this.state.word.toUpperCase() ? (\r\n                  <div className=\"meaningBlock\" id={defObject.defid}>\r\n                    {defObject.definition\r\n                      .split(\"[\")\r\n                      .join(\" \")\r\n                      .split(\"]\")\r\n                      .join(\" \")}\r\n                    <Button\r\n                      disableElevation\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => this.demoMethod(defObject.functions)}\r\n                      style={{ float: \"right\", margin: \"10px\" }}\r\n                    >\r\n                      Select\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DictionarySection;\r\n","import React from \"react\";\r\nimport \"./functionSection.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nclass FunctionSection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = { functionList:  };\r\n    this.demoMethod = this.demoMethod.bind(this);\r\n  }\r\n  demoMethod(val) {\r\n    this.props.sendFunc(val);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"functionSection\">\r\n        <InputLabel\r\n          style={{ textAlign: \"center\", margin: \"auto\" }}\r\n          id=\"demo-simple-select-helper-label\"\r\n        >\r\n          Code Snippets\r\n        </InputLabel>\r\n        {/* {alert(this.props.functions.length)} */}\r\n        {this.props.functions.length >= 1 ? (\r\n          <div className=\"meaningsDisplay\">\r\n            {this.props.functions.map(f => {\r\n              return (\r\n                <div className=\"meaningBlock\">\r\n                  {f.split(\"//\")[1].toUpperCase()}\r\n                  <Button\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => this.demoMethod(f)}\r\n                    style={{ float: \"right\", margin: \"10px\" }}\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FunctionSection;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2)\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1)\r\n  }\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        style={{ top: \"10px\", left: \"10px\", position: \"fixed\" }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        INFO\r\n      </Button>\r\n      <Dialog\r\n        fullScreen=\"true\"\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Walkthrough (of demo platform)\r\n        </DialogTitle>\r\n        <DialogContent style={{ textAlign: \"center\" }} dividers>\r\n          <h2 style={{ paddingTop: \"50px\" }}>Description</h2>\r\n          <p style={{ margin: \"0 auto\", textAlign: \"center\", width: \"500px\" }}>\r\n            Slangs are a huge part of communication today, but computers fail to\r\n            understand slang. The Code Slang library is a step towards bridging\r\n            this gap. Slang since forever has been designed by the people, as it\r\n            is evident in the urban dictionary. This platform enables people to\r\n            contribute to the library, continuing with Sharon De La Cruz's idea\r\n            of crowdsourcing the library. Users will be able to contribute by\r\n            adding a function or appreciating an existing function definition in\r\n            the library. This approach while being a step towards the computer\r\n            understanding slangs, will also ensure the creation of a library\r\n            that is up to date, which is necessary as slangs are always\r\n            evolving.It would also safeguard the library from the pitfalls of\r\n            slangs having different meanings in different contexts.\r\n          </p>\r\n          <h2 style={{ paddingTop: \"100px\" }}>User Flow</h2>\r\n          <img\r\n            height=\"500\"\r\n            alt=\"user flow of the platform\"\r\n            src={require(\"./userflow.png\")}\r\n          />\r\n          <h2 style={{ paddingTop: \"100px\" }}>Wireframe</h2>\r\n          <img\r\n            height=\"500\"\r\n            alt=\"wireframe of the platform\"\r\n            src={require(\"./wireframe.png\")}\r\n          />\r\n          <h2 style={{ paddingTop: \"100px\" }}>Inspiration</h2>\r\n          <h4>Project</h4>\r\n          <a href=\"https://github.com/xujenna/codeslang\">Code Slang</a>\r\n          <h4>Video</h4>\r\n          <iframe\r\n            title=\"youtube video\"\r\n            width=\"560\"\r\n            height=\"315\"\r\n            src=\"https://www.youtube.com/embed/CFT6w9NKfCs\"\r\n            frameborder=\"0\"\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowfullscreen\r\n          ></iframe>\r\n          <h2 style={{ paddingTop: \"100px\" }}>My Code Repository</h2>\r\n          You can find the code at:\r\n          <a href=\"https://github.com/kyzylmonteiro/theUrbanCompiler\">\r\n            https://github.com/kyzylmonteiro/theUrbanCompiler\r\n          </a>\r\n        </DialogContent>\r\n        <DialogActions style={{ position: \"static\", bottom: \"10px\" }}>\r\n          <Button\r\n            autoFocus\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            Back To the Platform\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport CodingEditor from \"./CodingEditor\";\nimport DictionarySection from \"./DictionarySection\";\nimport FunctionSection from \"./FunctionSection\";\nimport Output from \"./Output\";\nimport CustomizedDialogs from \"./CustomizedDialogs\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { code: \"\", outputCode: \"\", functions: \"\", fs: \"\" };\n    this.getData = this.getData.bind(this);\n    this.getOutputCode = this.getOutputCode.bind(this);\n    this.getFunc = this.getFunc.bind(this);\n  }\n  getData(val) {\n    // do not forget to bind getData in constructor\n    this.setState({ functions: val });\n    // alert(val);\n  }\n  getOutputCode(val) {\n    // do not forget to bind getData in constructor\n    this.setState({ outputCode: val });\n  }\n  getFunc(val) {\n    // do not forget to bind getData in constructor\n    // this.setState({ f: val });\n\n    // alert(val + \"heheheheh\");\n    this.setState(prevState => ({ fs: [...prevState.fs, val] }));\n    // alert(this.state.f);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {\" \"}\n          <CustomizedDialogs />{\" \"}\n        </header>\n        <div className=\"leftSection\">\n          <div className=\"outputArea\">\n            <Output code={this.state.outputCode} fs={this.state.fs} />\n          </div>\n          <div className=\"codingArea\">\n            <div\n              style={{ fontSize: \"12px\", color: \"gray\", textAlign: \"center\" }}\n            >\n              Click on the Info Button! <br />\n              Choose a slang and then a code snippet OR type P5js code below\n            </div>\n\n            <CodingEditor\n              fs={this.state.fs}\n              code={this.state.outputCode}\n              sendCode={this.getOutputCode}\n            />\n          </div>\n        </div>\n        <div className=\"rightSection\">\n          <div className=\"meaningsSection\">\n            <DictionarySection sendData={this.getData} />\n          </div>\n          <div className=\"functionsSection\">\n            <FunctionSection\n              sendFunc={this.getFunc}\n              functions={this.state.functions}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}