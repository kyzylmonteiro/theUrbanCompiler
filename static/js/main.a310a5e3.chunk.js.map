{"version":3,"sources":["Output.js","CodingEditor.js","DictionarySection.js","FunctionSection.js","App.js","index.js"],"names":["Output","x","y","setup","p5","canvasParentRef","createCanvas","parent","draw","clear","props","fs","length","eval","join","code","this","React","Component","CodingEditor","myRef","createRef","state","demoMethod","bind","sendCode","prevProps","userID","setState","refs","Prism","highlightAll","className","map","f","highlight","languages","processing","value","padding","style","fontFamily","fontSize","maxHeight","ref","onValueChange","Fab","color","size","aria-label","onClick","meaningsList","meanings","DictionarySection","handleChange","event","word","target","val","sendData","FormControl","InputLabel","id","Select","labelId","onChange","MenuItem","FormHelperText","defObject","toUpperCase","defid","definition","split","Button","disableElevation","variant","functions","float","margin","FunctionSection","sendFunc","textAlign","App","outputCode","getData","getOutputCode","getFunc","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a310a5e3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\nclass Output extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n  x = 50;\r\n  y = 50;\r\n\r\n  setup = (p5, canvasParentRef) => {\r\n    p5.createCanvas(925, 350).parent(canvasParentRef); // use parent to render canvas in this ref (without that p5 render this canvas outside your component)\r\n  };\r\n  draw = p5 => {\r\n    p5.clear();\r\n    if (this.props.fs.length >= 1) {\r\n      eval(this.props.fs.join(\"\\n\"));\r\n    }\r\n    eval(this.props.code);\r\n  };\r\n\r\n  render() {\r\n    return <Sketch setup={this.setup} draw={this.draw} />;\r\n  }\r\n}\r\nexport default Output;\r\n","import React from \"react\";\r\nimport Prism from \"prismjs\";\r\nimport Editor from \"react-simple-code-editor\";\r\nimport { highlight, languages } from \"prismjs/components/prism-core\";\r\nimport \"prismjs/components/prism-clike\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"prismjs/components/prism-processing\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport \"./codeEditorStyles.css\";\r\n\r\nclass CodingEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = { code: this.props.code };\r\n    this.demoMethod = this.demoMethod.bind(this);\r\n  }\r\n  demoMethod() {\r\n    this.props.sendCode(this.state.code);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.userID !== prevProps.userID) {\r\n      this.setState(\r\n        props => ({ code: props.code }),\r\n        () => (this.refs.myRef = this.state.code)\r\n      );\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    Prism.highlightAll();\r\n  }\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   if (nextProps.code === this.state.code && nextProps.f === this.state.f) {\r\n  //     return false;\r\n  //   } else {\r\n  //     return true;\r\n  //   }\r\n  // }\r\n  render() {\r\n    // if (this.state.f !== \"\") {\r\n    //   alert(\"here\");\r\n    //   this.setState({\r\n    //     code: this.refs.myRef + \" \" + this.props.f,\r\n    //     f: \"\"\r\n    //   });\r\n    // } else {\r\n    //   // alert(\"updaaaated\", this.props.code, this.props.f);\r\n    // }\r\n\r\n    return (\r\n      <div className=\"codeEditor\">\r\n        {/* {alert(this.state.code + \"snap\")} */}\r\n        {this.props.fs.length >= 1 ? (\r\n          <div>\r\n            {this.props.fs.map(f => {\r\n              return (\r\n                <div highlight={code => highlight(code, languages.processing)}>\r\n                  <Editor\r\n                    className=\"editor\"\r\n                    value={f}\r\n                    highlight={code => highlight(code, languages.processing)}\r\n                    padding={10}\r\n                    style={{\r\n                      fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n                      fontSize: 12,\r\n                      //   height: \"100%\",\r\n                      //   minHeight: \"80%\",\r\n                      maxHeight: \"100%\"\r\n                    }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Editor\r\n          ref={this.myRef}\r\n          className=\"editor\"\r\n          value={this.state.code}\r\n          onValueChange={code => this.setState({ code })}\r\n          highlight={code => highlight(code, languages.processing)}\r\n          padding={10}\r\n          style={{\r\n            fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n            fontSize: 12,\r\n            //   height: \"100%\",\r\n            //   minHeight: \"80%\",\r\n            maxHeight: \"100%\"\r\n          }}\r\n        />\r\n        <div className=\"playButton\">\r\n          <Fab\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            aria-label=\"add\"\r\n            onClick={this.demoMethod}\r\n          >\r\n            <PlayArrowIcon />\r\n          </Fab>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CodingEditor;\r\n","import React from \"react\";\r\nimport meanings from \"./meanings\";\r\nimport \"./dictionarySection.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst meaningsList = meanings;\r\n\r\nclass DictionarySection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { word: \"\" };\r\n    // this.meaningSelected = \"yooo\";\r\n    this.demoMethod = this.demoMethod.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange = event => {\r\n    // setWord(event.target.value);\r\n    this.setState({ word: event.target.value });\r\n  };\r\n  demoMethod(val) {\r\n    this.props.sendData(val);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"dictionarySection\">\r\n        <div className=\"heading\">\r\n          <FormControl className=\"formControl\">\r\n            <InputLabel id=\"demo-simple-select-helper-label\">\r\n              Choose Slang\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-helper-label\"\r\n              id=\"demo-simple-select-helper\"\r\n              value={this.state.word}\r\n              onChange={this.handleChange}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value={\"Hella\"}>Hella</MenuItem>\r\n              <MenuItem value={\"Lit\"}>Lit</MenuItem>\r\n              <MenuItem value={\"Dope\"}>Dope</MenuItem>\r\n            </Select>\r\n            <FormHelperText>\r\n              All definitions from urban Dictionary\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div className=\"meaningsDisplay\">\r\n          {meaningsList.map(defObject => {\r\n            return (\r\n              <div>\r\n                {defObject.word.toUpperCase() ===\r\n                this.state.word.toUpperCase() ? (\r\n                  <div className=\"meaningBlock\" id={defObject.defid}>\r\n                    {defObject.definition\r\n                      .split(\"[\")\r\n                      .join(\" \")\r\n                      .split(\"]\")\r\n                      .join(\" \")}\r\n                    <Button\r\n                      disableElevation\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => this.demoMethod(defObject.functions)}\r\n                      style={{ float: \"right\", margin: \"10px\" }}\r\n                    >\r\n                      Select\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DictionarySection;\r\n","import React from \"react\";\r\nimport \"./functionSection.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nclass FunctionSection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = { functionList:  };\r\n    this.demoMethod = this.demoMethod.bind(this);\r\n  }\r\n  demoMethod(val) {\r\n    this.props.sendFunc(val);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"functionSection\">\r\n        <InputLabel\r\n          style={{ textAlign: \"center\", margin: \"auto\" }}\r\n          id=\"demo-simple-select-helper-label\"\r\n        >\r\n          Code Snippets\r\n        </InputLabel>\r\n        {/* {alert(this.props.functions.length)} */}\r\n        {this.props.functions.length >= 1 ? (\r\n          <div className=\"meaningsDisplay\">\r\n            {this.props.functions.map(f => {\r\n              return (\r\n                <div className=\"meaningBlock\">\r\n                  {f.split(\"//\")[1].toUpperCase()}\r\n                  <Button\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => this.demoMethod(f)}\r\n                    style={{ float: \"right\", margin: \"10px\" }}\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FunctionSection;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport CodingEditor from \"./CodingEditor\";\nimport DictionarySection from \"./DictionarySection\";\nimport FunctionSection from \"./FunctionSection\";\nimport Output from \"./Output\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { code: \"\", outputCode: \"\", functions: \"\", fs: \"\" };\n    this.getData = this.getData.bind(this);\n    this.getOutputCode = this.getOutputCode.bind(this);\n    this.getFunc = this.getFunc.bind(this);\n  }\n  getData(val) {\n    // do not forget to bind getData in constructor\n    this.setState({ functions: val });\n    // alert(val);\n  }\n  getOutputCode(val) {\n    // do not forget to bind getData in constructor\n    this.setState({ outputCode: val });\n  }\n  getFunc(val) {\n    // do not forget to bind getData in constructor\n    // this.setState({ f: val });\n\n    // alert(val + \"heheheheh\");\n    this.setState(prevState => ({ fs: [...prevState.fs, val] }));\n    // alert(this.state.f);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"></header>\n        <div className=\"leftSection\">\n          <div className=\"outputArea\">\n            <Output code={this.state.outputCode} fs={this.state.fs} />\n          </div>\n          <div className=\"codingArea\">\n            <div\n              style={{ fontSize: \"12px\", color: \"gray\", textAlign: \"center\" }}\n            >\n              Choose a slang and then a code snippet OR type P5js code below\n            </div>\n            {/* {alert(\n              this.state.fs +\n                \"---\" +\n                this.state.code +\n                \"---\" +\n                this.state.functions\n            )} */}\n            <CodingEditor\n              fs={this.state.fs}\n              code={this.state.outputCode}\n              sendCode={this.getOutputCode}\n            />\n          </div>\n        </div>\n        <div className=\"rightSection\">\n          <div className=\"meaningsSection\">\n            <DictionarySection sendData={this.getData} />\n          </div>\n          <div className=\"functionsSection\">\n            <FunctionSection\n              sendFunc={this.getFunc}\n              functions={this.state.functions}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}